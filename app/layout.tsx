import "@radix-ui/themes/styles.css";
import "./globals.css";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import SideBar from "./components/SideBar";
import Providers from "./providers";
import { Theme } from "@radix-ui/themes";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface LayoutProps {
  children: React.ReactNode;
}

/**
 * RootLayout Component
 * Sets the layout for the entire application.
 * Wraps the application with the ThemeProvider component that provides theme context to entire application,
 * and Theme component that is essential for Radix-ui components.
 *
 * @param {React.ReactNode} children - The components of the application.
 */

export default async function RootLayout({ children }: LayoutProps) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased `}
      >
        <Theme>
          <Providers>
            <div className="flex dark:bg-dark-bg bg-light-bg">
              <SideBar />
              <div className="flex-grow">{children}</div>
            </div>
          </Providers>
        </Theme>
      </body>
    </html>
  );
}
